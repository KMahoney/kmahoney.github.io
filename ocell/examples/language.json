{"zipper":{"tag":"NameFocus","args":[{"right":"","left":"Language"},[{"body":{"tag":"Markdown","args":["# A Brief Language Tutorial\n\n## Simple Values\n\nCells can have simple number values:"]},"id":4},{"body":{"tag":"Named","args":["number-value",{"tag":"Expression","args":[[{"tag":"Value","args":["42"]}],null]}]},"id":3},{"body":{"tag":"Markdown","args":["Note that the type of the expression is displayed underneath, along with its evaluation.\n\n## Operations\n\nNumbers can be operated on with `+` `-` `*` and `/`. The usual precedence rules apply. OCell will sometimes use a bullet (·) for multiplication and the division symbol (÷).\n\nCompare values with `=`."]},"id":5},{"body":{"tag":"Named","args":["operators",{"tag":"Expression","args":[[{"tag":"Value","args":["42"]},{"tag":"Value","args":["*"]},{"tag":"Value","args":["42"]},{"tag":"Value","args":["-"]},{"tag":"Value","args":["1"]},{"tag":"Value","args":["/"]},{"tag":"Value","args":["10"]},{"tag":"Value","args":["+"]},{"tag":"Value","args":["2"]}],null]}]},"id":6},{"body":{"tag":"Named","args":["compare",{"tag":"Expression","args":[[{"tag":"Value","args":["1"]},{"tag":"Value","args":["+"]},{"tag":"Value","args":["1"]},{"tag":"Value","args":["="]},{"tag":"Value","args":["2"]}],null]}]},"id":25},{"body":{"tag":"Markdown","args":["## Sub Expressions\n\nUse `(` to insert sub-expressions."]},"id":8},{"body":{"tag":"Named","args":["sub-exp",{"tag":"Expression","args":[[{"tag":"Value","args":["42"]},{"tag":"Value","args":["*"]},{"tag":"SubExp","args":[[{"tag":"Value","args":["42"]},{"tag":"Value","args":["-"]},{"tag":"Value","args":["1"]},{"tag":"Value","args":["/"]},{"tag":"SubExp","args":[[{"tag":"Value","args":["10"]},{"tag":"Value","args":["+"]},{"tag":"Value","args":["2"]}]]}]]}],null]}]},"id":9},{"body":{"tag":"Markdown","args":["## References\n\nYou can reference other cells by using the cell name."]},"id":10},{"body":{"tag":"Named","args":["ref",{"tag":"Expression","args":[[{"tag":"Value","args":["operators"]},{"tag":"Value","args":["+"]},{"tag":"Value","args":["sub-exp"]}],null]}]},"id":11},{"body":{"tag":"Markdown","args":["## Lambdas\n\nInsert lambdas using `\\`.\n\nYou can effectively have a function with multiple arguments by nesting multiple lambdas."]},"id":12},{"body":{"tag":"Named","args":["lambda",{"tag":"Expression","args":[[{"tag":"Lambda","args":["x",[{"tag":"Value","args":["x"]},{"tag":"Value","args":["+"]},{"tag":"Value","args":["1"]}]]}],null]}]},"id":13},{"body":{"tag":"Named","args":["add",{"tag":"Expression","args":[[{"tag":"Lambda","args":["x",[{"tag":"Lambda","args":["y",[{"tag":"Value","args":["x"]},{"tag":"Value","args":["+"]},{"tag":"Value","args":["y"]}]]}]]}],null]}]},"id":15},{"body":{"tag":"Markdown","args":["## Application\n\nApply a function by writing an argument after it. \n\nNote that functions with multiple arguments are partially applied."]},"id":16},{"body":{"tag":"Named","args":["app",{"tag":"Expression","args":[[{"tag":"Value","args":["add"]},{"tag":"Value","args":["1"]},{"tag":"Value","args":["2"]}],null]}]},"id":18},{"body":{"tag":"Named","args":["partial",{"tag":"Expression","args":[[{"tag":"Value","args":["add"]},{"tag":"Value","args":["1"]}],null]}]},"id":17},{"body":{"tag":"Markdown","args":["## Sliders\n\nSliders are a UI element that evaluate to a number between 0 and 1."]},"id":19},{"body":{"tag":"Named","args":["slider",{"tag":"Slider","args":[0.18125]}]},"id":20},{"body":{"tag":"Named","args":["slider-value",{"tag":"Expression","args":[[{"tag":"Value","args":["slider"]}],null]}]},"id":21},{"body":{"tag":"Markdown","args":["## Graphs\n\n`graph` takes a function as an argument and displays a continuous graph."]},"id":22},{"body":{"tag":"Named","args":["g1",{"tag":"Expression","args":[[{"tag":"Value","args":["graph"]},{"tag":"Lambda","args":["x",[{"tag":"Value","args":["x"]}]]}],null]}]},"id":23},{"body":{"tag":"Markdown","args":["## Standard Library\n\nAs well as the operators, the standard library contains:\n\n* graph\n* sin\n* cos\n* pow\n"]},"id":24}]]},"nextId":26,"id":null,"projectName":"Language"}